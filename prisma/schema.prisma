// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  clerkId   String          @unique
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  stripe    StripeCustomer?
  dogs      Dog[]

  @@id([clerkId])
}

model StripeCustomer {
  id               String   @id @default(cuid())
  clerkId          String   @unique
  stripeCustomerId String   @unique
  email            String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [clerkId])
  userId           String   @unique
}

model Dog {
  id        String       @id @default(cuid())
  name      String
  breed     String
  imageUrl  String?
  metadata  DogMetadata?
  bookings  Booking[]
  owner     User         @relation(fields: [ownerId], references: [clerkId])
  ownerId   String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model DogMetadata {
  id        String   @id @default(cuid())
  dogId     String   @unique
  dog       Dog      @relation(fields: [dogId], references: [id])
  dob       DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id         String   @id @default(cuid())
  orgId      String
  dogId      String
  dog        Dog      @relation(fields: [dogId], references: [id])
  customerId String
  startTime  DateTime
  endTime    DateTime
  isPaid     Boolean
  payment    Payment? @relation(fields: [paymentId], references: [id])
  paymentId  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([orgId, dogId, customerId])
}

model Payment {
  id        String    @id @default(cuid())
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
